
<!DOCTYPE html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Move the Ball</title>
<meta name="viewport" content="width=device-width,user-scalable=no" />
<script src="http://debug.phonegap.com/target/target-script-min.js#accelerometer"></script>
<script src="/assets/Chart.js"></script>

<style>
#no {
    display: none;  
}
#ball {
    width: 20px;
    height: 20px;
    border-radius: 10px;
    -webkit-radius: 10px;
    background-color: red;
    position:absolute;
    top: 0px;
    left: 0px;
}
</style>
</head>

<body>
<div id="content">
    <h3>Testing Phone Gyroscope and Accelerometer</h3>

    <canvas id="myChart" width="400" height="400"> </canvas>

    <div id="yes">
    </div>
    <div id="no">
    Your browser does not support Device Orientation and Motion API. Try this sample with iPhone, iPod or iPad with iOS 4.2+.    
    </div>

    <div id="objectPrint"></div>
    <div id="outputAcc"></div>
    <div id="outputGyro"></div>
</div>

<script>


// Position Variables
var x = 0;
var y = 0;
var z = 0;
var time;

// Speed - Velocity
var vx = 0;
var vy = 0;
var vz = 0;

// // Acceleration
// var ax = 0;
// var ay = 0;
// var az = 0;

// Declaring an array which all the accelerometer information will sit
// Will need to map these items later (x, y and z values)
var accel_array = [];
var accel_time = [];
var accel_ax = [];
var accel_ay = [];
var accel_az = [];

  // Device motion stuff  
if (window.DeviceMotionEvent==undefined) {
    document.getElementById("no").style.display="block";
    document.getElementById("yes").style.display="none";

} else {
     
var output_xyz ;
    // Print out information about the accelerometer
    window.ondevicemotion = function(event) {
            ax = event.accelerationIncludingGravity.x;
            ay = event.accelerationIncludingGravity.y;
            az = event.accelerationIncludingGravity.z;
            output_xyz = "<h5> x: " + event.accelerationIncludingGravity.x.toFixed(1) + " y: " + event.accelerationIncludingGravity.y.toFixed(1) + " z: " + event.accelerationIncludingGravity.z.toFixed(1) + "</h5>";
            
            accel_array.push({
                'ax': event.accelerationIncludingGravity.x,
                'ay': event.accelerationIncludingGravity.y,
                'az': event.accelerationIncludingGravity.z,
                'datetime': new Date()
            });

            accel_time.push(new Date());
            accel_ax.push(event.accelerationIncludingGravity.x);
            accel_ay.push(event.accelerationIncludingGravity.y);
            accel_az.push(event.accelerationIncludingGravity.z);



    };


    // Print out information about the gyroscope
    // window.ondeviceorientation = function(event) {
    //     a_alpha = event.alpha;
    //     a_beta = event.beta;
    //     a_gamma = event.gamma;

    //     var output_gyro = "<h3>Gyroscope data</h3> Alpha: " + event.alpha.toFixed(2) + " Beta: " + event.beta.toFixed(2) + " Gamma: " + event.gamma.toFixed(2);
    //     $('#outputGyro').html(output_gyro);
    // };

} 
    // Printing information on screen every 0.5 seconds
    setInterval(function() {
        // $('#objectPrint').html(JSON.stringify(accel_array));
        $('#outputAcc').html(output_xyz, new Date());

        var test_labels = [];
        for (var i = 0; i < accel_time.length; i++) {
            test_labels.push(i);
        }

        // Testing graphs
        var ctx = document.getElementById("myChart").getContext("2d");
        var data = {
            labels: test_labels, //accel_time,
            datasets: [
                {
                    label: "X-axis",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: accel_ax
                },
                {
                    label: "Y-axis",
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(151,187,205,1)",
                    data: accel_ay
                },
                {
                    label: "Z-axis",
                    fillColor: "rgba(200,0,200,0.2)",
                    strokeColor: "rgba(200,0,200,1)",
                    pointColor: "rgba(200,0,200,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(151,187,205,1)",
                    data: accel_az
                }
            ]
        };
        var myLineChart = new Chart(ctx).Line(data);






        }, 20000);

</script>

</body>
</html>
